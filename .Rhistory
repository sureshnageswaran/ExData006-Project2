rev <- rnorm(10, 35000, 20000)
rev
?read.csv
data_url <- "http://faculty.washington.edu/ezivot/econ424/sbuxPrices.csv"
sbux_df <- read.csv(data_url, header=TRUE, stringsasFactors=FALSE)
sbux_df <- read.csv(data_url, header=TRUE, stringsAsFactors=FALSE)
sbux_df
head(sbux_df , 10)
library(stockPortfolio)
getReturns
getReturns("SBUX", frequency="day")
getReturns("SBUX", freq="day", from="01/01/1993", to="08/01/2014")
getReturns("SBUX", freq="day", start="01/01/1993", end="08/01/2014")
sbux_df <- getReturns("SBUX", freq="day", start="01/01/1993", end="08/01/2014")
summary(sbux_df)
head(sbux_df)
head(sbux_df, 10)
head(sbux_df, 1)
colnames(sbux_df)
search()
.packages()
(.packages())
library(data.table)
library(data.table)
ver
version()
ver()
about
?R
dt <- data.table(x=rnorm(1000), y = rep(LETTERS))
sessionInfo()
rm(list=ls())
library(stockPortfolio)
(.packages())
library(xlsx)
library(manipulate)
load(cars)
load.dataset(cars)
data(cars)
head(cars)
library(rcurl)
library(rCurl)
library(RCurl)
?getURL
txt = getURL("https://api.github.com/zen")
txt = getURL("https://api.github.com/zen")
txt = getURL("https://api.github.com/zen/")
curl --config
curl-config()
curl-config
curlOptions()
?curlOptions
txt = getURL("https://api.github.com/zen/")
txt = getURL("https://api.github.com/zen")
txt = getURL("https://api.github.com/zen")
txt = getURL("https://api.github.com/zen")
curlVersion$protocol()
library(RCurl)
curlVersion$protocol()
curlVersion()$protocol
library(RCurl)
curlVersion$protocol()
curlVersion()$protocol
txt = getURL("https://api.github.com/zen")
txt = getURL("https://api.github.com/zen", cainfo = "c:/Program Files/R/library/RCurl/CurlSSL/ca-bundle.crt")
txt = getURL("https://api.github.com/zen", cainfo = "C:/Program Files/R/R-3.1.1/library/RCurl/CurlSSL/ca-bundle.crt")
curlVersion()$protocol
txt = getURL("https://api.github.com/zen", cainfo = "C:/Program Files/R/R-3.1.1/library/RCurl/CurlSSL/ca-bundle.crt")
source('C:/Projects/RWork/GetData006/TryOAuth.r')
?oauth_app
source('C:/Projects/RWork/GetData006/TryOAuth.r')
library(httpuv)
install.packages(httpuv)
wget
library(httpuv)
source('C:/Projects/RWork/GetData006/TryOAuth.r')
source('C:/Projects/RWork/GetData006/TryOAuth.r')
?token
??token
?config
?oauth2.0_token
?oauth_endpoints
source('C:/Projects/RWork/GetData006/TryOAuth.r')
dim(req)
req
str(req)
summary(seq)
summary(req)
req
debugSource('C:/Projects/RWork/GetData006/Assignment/run_analysis.R')
consolidateDatasets("C:/Projects/RWork/GetData006/Assignment/UCI HAR Dataset/train/X_train.txt", "C:/Projects/RWork/GetData006/Assignment/UCI HAR Dataset/test/X_test.txt", "C:/Projects/RWork/GetData006/Assignment/UCI HAR Dataset/X_All.txt")
debugSource('C:/Projects/RWork/GetData006/Assignment/run_analysis.R')
debugSource('C:/Projects/RWork/GetData006/Assignment/run_analysis.R')
rm(list=ls())
source("C:\Projects\RWork\GetData006-new\Assignment\Evaluations\Student1\run_analysis.r")
source("C:/Projects/RWork/GetData006-new/Assignment/Evaluations/Student1/run_analysis.r")
source("C:/Projects/RWork/GetData006-new/Assignment/Evaluations/Student1/run_analysis.r")
source("C:/Projects/RWork/GetData006-new/Assignment/Evaluations/Student1/run_analysis.r")
getwd()
dir()
getwd()
setwd("C:/projects/rwork/getdata006/assignment")
rm(run_analysis, trim)
debugSource('C:/Projects/RWork/ExData006/Project1/plot1.r')
createReducedDataset()
source('C:/Projects/RWork/ExData006/Project1/plot1.r')
source('C:/Projects/RWork/ExData006/Project1/plot1.r')
rm(list=ls())
source('C:/Projects/RWork/ExData006/Project1/plot1.r')
createReducedDataset()
source('C:/Projects/RWork/ExData006/Project1/plot1.r')
source('C:/Projects/RWork/ExData006/Project1/plot1.r')
createReducedDataset()
source('C:/Projects/RWork/ExData006/Project1/plot1.r')
dfOut <- createReducedDataset()
head(dfOut ,10)
?ggplot
?plot
head(dfOut)
hist(dfOut$Global_active_power, breaks=12, color=red)
hist(dfOut$Global_active_power, breaks=12, color="red")
?hist
hist(dfOut$Global_active_power, breaks=12, col="red")
?dev.print
hist(dfOut$Global_active_power, breaks=12, col="red")
?plot
?hist
hist(dfOut$Global_active_power, breaks=12, col="red", main="Global Active Power", xlab="Global Active Power (kilowatts)")
dir.exists("C:/Projects/RWork/ExData006/Project1")
?dir
?file.exists
file.exists("C:/Projects/RWork/ExData006/Project1")
file.exists("C:/Projects/RWork/ExData006/Projec1")
scan(file="", what=character())
readLine()
readLines()
rm(list=ls())
install.packages("zoo")
library(TT)
library(TTR)
library(Defaults)
library(devtools)
install.package("devtools")
install.packages("devtools")
library(devtools)
sessioninfo()
sessionInfo()
sessionInfo()
library(quantstrat)
sessionInfo()
s <- getSymbols(Symbols="SPY", from="1998-01-01", to="2014-09-17")
s
head(SPY)
tail(SPY)
chart_Series(SPY)
zoom_Chart("2013")
zoom_Chart("1998:2014")
test <- SMA(Cl(SPY), n=200)
test
head(test)
Cl(SPY)
head(test)
tail(test)
args(SMA)
testRSI <- RSI(Cl(SPY), n=2)
add_TA(testRSI,col="green")
zoom_Chart("2013")
add_TA(SMA, on=1, lwd=5, col="blue")
add_TA(test, on=1, lwd=5, col="blue")
rm(list=ls())
a <- 20000
b <- 14000
b/a
?percentage
?percent
(b/a)*100
b <- as.numeric
b
b <- as.numeric(b)
b <- as.numeric(14000)
a <- as.numeric(20000)
a
b
a/b
b/a
b <- 15223
b/a
b/a*100
round(b/a*100)
round(b/a*100, digits=2)
?roundup
?round
ceiling(b/a*100)
b <- 15623
b/a
b <- 15622
b/a
b <- 15652
b/a
b <-16290
b/a
round(b/a, digits=2)
paste("Test is", b/a, sep="")
paste("Test is", b/a, sep=" ")
getwd()
setwd("C:/Projects/RWork/ExData006/Project2/ExData006-Project2")
dir()
source("plot1.r")
rm(a,b)
dfNEI <- readRDS("summarySCC_PM25.rds")
dfSCC<- readRDS("Source_Classification_Code.rds")
plot1(,dfNEI,dfSCC,TRUE)
source("plot1.r")
plot1(,dfNEI,dfSCC,TRUE)
rm(plot1)
source("plot1.r")
plot1(,dfNEI,dfSCC,TRUE)
source("plot2.r")
plot2(,dfNEI,dfSCC,TRUE)
rm(plot1,plot2)
dfBalt <- subset(dfNEI, fips == "24510", select = c(year, type, Emissions))
dfBalt <- as.data.frame(tapply(dfBalt$Emissions, list(dfBalt$year, dfBalt$type), sum))
dfBalt
dfBalt <- cbind(Year=as.numeric(rownames(dfBalt)), dfBalt)
rownames(dfBalt)<-NULL
dfBalt <- melt(dfBalt, id=c("Year"))
library(reshape)
dfBalt <- melt(dfBalt, id=c("Year"))
colnames(dfBalt) <- c("Year", "Type", "Emissions")
dfBalt
dPerPoint <- dfBalt$Emissions[max(dfBalt$Year) && dfBalt$Type=="POINT"]
dPerPoint
dPerPoint <- dfBalt$Emissions[max(dfBalt$Year)]
dPerPoint
dPerPoint <- dfBalt$Emissions[dfBalt$Year==max(dfBalt$Year)]
dPerPoint
dPerPoint <- dfBalt$Emissions[dfBalt$Year==max(dfBalt$Year) && dfBalt$Type =="POINT"]
dPerPoint
dPerPoint <- dfBalt$Emissions[dfBalt$Year==max(dfBalt$Year) & dfBalt$Type =="POINT"]
dPerPoint
dPerPoint <- round( (dfBalt$Emissions[dfBalt$Year==max(dfBalt$Year) & dfBalt$Type =="POINT"] / dfBalt$Emissions[dfBalt$Year==min(dfBalt$Year) & dfBalt$Type =="POINT"])*100, digits=2 )
dPerPoint
dfBalt$Emissions[dfBalt$Year==max(dfBalt$Year) & dfBalt$Type =="POINT"]
dfBalt$Emissions[dfBalt$Year==min(dfBalt$Year) & dfBalt$Type =="POINT"]
dfBalt$Emissions[dfBalt$Year==max(dfBalt$Year) & dfBalt$Type =="POINT"] / dfBalt$Emissions[dfBalt$Year==min(dfBalt$Year) & dfBalt$Type =="POINT"]
dfBalt
dPerPoint <- round( (dfBalt$Emissions[dfBalt$Year==max(dfBalt$Year) & dfBalt$Type =="POINT"] / dfBalt$Emissions[dfBalt$Year==min(dfBalt$Year) & dfBalt$Type =="POINT"])*100, digits=2 )
dPerPoint
dPerNonPoint <- round( (dfBalt$Emissions[dfBalt$Year==max(dfBalt$Year) & dfBalt$Type =="NONPOINT"] / dfBalt$Emissions[dfBalt$Year==min(dfBalt$Year) & dfBalt$Type =="NONPOINT"])*100, digits=2 )
dPerNonPoint
dPerOnRoad <- round( (dfBalt$Emissions[dfBalt$Year==max(dfBalt$Year) & dfBalt$Type =="ON-ROAD"] / dfBalt$Emissions[dfBalt$Year==min(dfBalt$Year) & dfBalt$Type =="ON-ROAD"])*100, digits=2 )
dPerOnRoad
dPerNonRoad <- round( (dfBalt$Emissions[dfBalt$Year==max(dfBalt$Year) & dfBalt$Type =="NON-ROAD"] / dfBalt$Emissions[dfBalt$Year==min(dfBalt$Year) & dfBalt$Type =="NON-ROAD"])*100, digits=2 )
dPerNonRoad
rm(dfPerPoint, dPerNonPoint,dPerNonRoad,dPerOnRoad)
rm(dPerPoint)
dPerPoint <- round( (dfBalt$Emissions[dfBalt$Year==max(dfBalt$Year) & dfBalt$Type =="POINT"] / dfBalt$Emissions[dfBalt$Year==min(dfBalt$Year) & dfBalt$Type =="POINT"])*100, digits=2 )
dPerNonPoint <- round( (dfBalt$Emissions[dfBalt$Year==max(dfBalt$Year) & dfBalt$Type =="NONPOINT"] / dfBalt$Emissions[dfBalt$Year==min(dfBalt$Year) & dfBalt$Type =="NONPOINT"])*100, digits=2 )
dPerOnRoad <- round( (dfBalt$Emissions[dfBalt$Year==max(dfBalt$Year) & dfBalt$Type =="ON-ROAD"] / dfBalt$Emissions[dfBalt$Year==min(dfBalt$Year) & dfBalt$Type =="ON-ROAD"])*100, digits=2 )
dPerNonRoad <- round( (dfBalt$Emissions[dfBalt$Year==max(dfBalt$Year) & dfBalt$Type =="NON-ROAD"] / dfBalt$Emissions[dfBalt$Year==min(dfBalt$Year) & dfBalt$Type =="NON-ROAD"])*100, digits=2 )
sLabel <- paste("Emissions from all sources except Point have declined.\n Point\t", dPerPoint, sep="")
sLabel
rm(sLabel)
sLabel <- paste("Emissions from all sources except Point have declined.\n Point\t", dPerPoint, sep="")
sLabel <- paste(sLabel, "%\n Non-Point\t")
sLabel
sLabel <- paste(sLabel, dPerNonPoint, sep="")
sLabel <- paste(sLabel, "%\n On-Road\t")
sLabel <- paste(sLabel, dPerOnRoad, sep="")
sLabel <- paste(sLabel, "%\n Non-Road\t")
sLabel <- paste(sLabel, dPerNonRoad, sep="")
sLabel <- paste(sLabel, "%.", sep="")
sLabel
rm(dPerNonPoint,dPerNonRoad,dPerOnRoad,dPerPoint,sLabel)
rm(checkAndDownload
)
rm(dfBalt)
source("Plot3.r")
plot3(,dfNEI, dfSCC, TRUE)
source("Plot3.r")
plot3(,dfNEI, dfSCC, TRUE)
rm(plot3)
library(plyr)
dfMerged <- join(dfNEI, dfSCC, by="SCC", type="left")
vSources <- as.vector(unique(dfSCC$EI.Sector))
vSources
vSources <- vSources[grep("Coal",vSources, ignore.case=TRUE)]
vSources
vSources
colnames(dfSCC )
vSources1 <- as.vector(unique(dfSCC$SCC.Level.Three))
vSources1
vSources1 <- vSources1[grep("Coal",vSources1, ignore.case=TRUE)]
vSources1
dfMerged <- subset(dfMerged, ((dfMerged$EI.Sector %in% vSources) | (dfMerged$SCC.Level.Three %in% vSources1)))
head(dfMerged)
as.vector(unique(dfMerged$SCC.Level.Three))
as.vector(unique(dfMerged$EI.Sector))
dfMerged <- tapply(dfMerged$Emissions, dfMerged$year, sum)
dfMerged
dfMerged <- data.frame(cbind(Year=as.numeric(rownames(dfMerged)),Emissions=as.numeric(dfMerged[1:4])))
dfMerged
dfMerged$Emissions[dfMerged$Year == max(dfMerged$Year)]
iDiff <- round(max(dfMerged[,"Emissions"]) - min(dfMerged[,"Emissions"]))
sLabel <- paste("Emissions from coal-comb sources declined by", iDiff)
sLabel
iPer <- round (dfMerged$Emissions[dfMerged$Year == max(dfMerged$Year)] / dfMerged$Emissions[dfMerged$Year == min(dfMerged$Year)] * 100, digits=2)
sLabel <- paste(sLabel, ".\nThis is a decrease of ", sep="")
sLabel
sLabel <- paste(sLabel, iPer, sep="")
sLabel <- paste(sLabel, "%.", sep="")
sLabel
p <- qplot(Year, Emissions/1000, data=dfMerged,  geom=c("point", "smooth"), ylab = "Emissions from coal (in 1000s)") +
geom_text(aes(label=round(dfMerged$Emissions)),hjust=0, vjust=1) +
annotate("text", x = 2004, y = 500, label = sLabel)
print(p)
rm(iDiff,iPer,p)
rm(sLabel, vSources,vSources1)
rm(checkAndDownload)
rm(dfMerged)
source("plot4.r")
dfMerged <- data.frame(c(1998, 2002, 2004, 2008), c(132, 23882, 288,10))
dfMerged
colnames(dfMerged) <- c("Year", "Emissions")
dfMerged
iPer <- round (dfMerged$Emissions[dfMerged$Year == max(dfMerged$Year)] / dfMerged$Emissions[dfMerged$Year == min(dfMerged$Year)] * 100, digits=2)
iPer
sLabel <- paste(sLabel, ".\nThis is a decrease of ", sep="")
sLabel <- paste("Emissions from coal-comb sources declined by", iDiff,"sep="")
rm(dfMerged,iPer)
source("plot4.r")
plot4(,dfNEI,dfSCC,TRUE)
plot4(,dfNEI,dfSCC,TRUE)
source("plot4.r")
plot4(,dfNEI,dfSCC,TRUE)
rm(plot4.r)
rm(plot4)
?par
install.packages(gridExtra)
install.packages("gridExtra")
colnames(dfSCC)
as.vector(unique(dfSCC$EI.Sector))
as.vector(unique(dfSCC$SCC.Level.One))
as.vector(unique(dfSCC$SCC.Level.Two))
grep(as.vector(unique(dfSCC$SCC.Level.Two)), "vehicle")
grep("vehicle", as.vector(unique(dfSCC$SCC.Level.Two)), ignore.case=TRUE)
grep("vehicle", as.vector(unique(dfSCC$SCC.Level.oNE)), ignore.case=TRUE)
grep("vehicle", as.vector(unique(dfSCC$SCC.Level.One)), ignore.case=TRUE)
grep("vehicle", as.vector(unique(dfSCC$SCC.Level.Three)), ignore.case=TRUE)
grep("vehicle", as.vector(unique(dfSCC$EI.Sector)), ignore.case=TRUE)
vSources  <- vSources[grep("vehicle",vSources, ignore.case=TRUE)]
vSources <- as.vector(unique(dfSCC$EI.Sector))
vSources  <- vSources[grep("vehicle",vSources, ignore.case=TRUE)]
vSources
vSources <- as.vector(unique(dfSCC$EI.Sector))
vSources  <- vSources[grep("vehicles",vSources, ignore.case=TRUE)]
vSources
rm(vSources)
vSources <- as.vector(unique(dfSCC$EI.Sector))
vSources1 <- as.vector(unique(dfSCC$SCC.Level.One))
vSources2 <- as.vector(unique(dfSCC$SCC.Level.Two))
vSources3 <- as.vector(unique(dfSCC$SCC.Level.Three))
vSources  <- vSources[grep("vehicle",vSources,  ignore.case=TRUE)]
vSources1 <- vSources[grep("vehicle",vSources1, ignore.case=TRUE)]
vSources2 <- vSources[grep("vehicle",vSources2, ignore.case=TRUE)]
vSources3 <- vSources[grep("vehicle",vSources3, ignore.case=TRUE)]
vSources
vSources1
vSources2
rm(vSources,vSources1,vSources2,vSources3)
vSources <- as.vector(unique(dfSCC$EI.Sector))
vSources1 <- as.vector(unique(dfSCC$SCC.Level.One))
vSources2 <- as.vector(unique(dfSCC$SCC.Level.Two))
vSources3 <- as.vector(unique(dfSCC$SCC.Level.Three))
vSources  <- vSources [grep("vehicle",vSources,  ignore.case=TRUE)]
vSources1 <- vSources1[grep("vehicle",vSources1, ignore.case=TRUE)]
vSources2 <- vSources2[grep("vehicle",vSources2, ignore.case=TRUE)]
vSources3 <- vSources3[grep("vehicle",vSources3, ignore.case=TRUE)]
vSources
vSources1
vSources2
vSources3
rm(vSources1)
dfMerged <- join(dfNEI, dfSCC, by="SCC", type="left")
dfMerged1 <- subset(dfMerged, ((dfMerged$EI.Sector %in% vSources) | (dfMerged$SCC.Level.Two %in% vSources2) | (dfMerged$SCC.Level.Three %in% vSources3)) & (fips = "24510") )
typeof(vSources)
typeof(vSources1)
typeof(vSources2)
typeof(vSources3)
class(vSources)
class(vSources2)
class(vSources3)
dfMerged1 <- subset(dfMerged, ((dfMerged$EI.Sector %in% vSources) | (dfMerged$SCC.Level.Two %in% vSources2) ) & (fips = "24510") )
dfMerged1 <- subset(dfMerged, ((dfMerged$EI.Sector %in% vSources)  & (fips = "24510")))
dfMerged1 <- subset(dfMerged, ((dfMerged$EI.Sector %in% vSources) | (dfMerged$SCC.Level.Two %in% vSources2) | (dfMerged$SCC.Level.Three %in% vSources3)) & (fips == "24510") )
head(dfMerged1)
colnames(dfMerged1)
as.vector(unique(dfMerged1$EI.Sector))
as.vector(unique(dfMerged1$SCC.Level.One))
as.vector(unique(dfMerged1$SCC.Level.Two))
as.vector(unique(dfMerged1$SCC.Level.Three))
dfMerged <- tapply(dfMerged$Emissions, dfMerged$year, sum)
dfMerged
dfMerged <- data.frame(cbind(Year=as.numeric(rownames(dfMerged)),Emissions=as.numeric(dfMerged[1:4])))
rm(dfMerged,dfMerged1, vSources,vSources2,vSources3)
source("plot5.r")
plot5(,dfNEI,dfSCC,TRUE)
dfMerged <- join(dfNEI, dfSCC, by="SCC", type="left")
vSources <- as.vector(unique(dfSCC$EI.Sector))
vSources2 <- as.vector(unique(dfSCC$SCC.Level.Two))
vSources3 <- as.vector(unique(dfSCC$SCC.Level.Three))
vSources3 <- as.vector(unique(dfSCC$SCC.Level.Three))
dfMerged <- subset(dfMerged, ((dfMerged$EI.Sector %in% vSources) | (dfMerged$SCC.Level.Two %in% vSources2) | (dfMerged$SCC.Level.Three %in% vSources3)) & (fips == "24510") )
dfMerged1 <- tapply(dfMerged$Emissions, dfMerged$year, sum)
dfMerged1
dfMergedSubset <- dfMerged
dfMerged <-dfMerged1
rm(dfMerged1)
dfMerged
dfMerged <- data.frame(cbind(Year=as.numeric(rownames(dfMerged)),Emissions=as.numeric(dfMerged[1:4])))
dfMerged
dfM <- dfMerged
dfM
dfM
?tapply
?diff
diff(1:10, 2)
z <- c(1, 3, 299,2,29,49)
z
z <- as.numeric(z)
z
diff(z)
as.data.frame(lapply(dfM, diff))
as.data.frame(lapply(dfM$Emissions, diff))
tapply(dfM$Emissions, dfM$Year, diff)
diff(dfM$Emissions)
dfM
nrow(dfM)
?for
for(i in 1:nrow(dfM)) { a <- (dfM$Emissions[i]/dfM$Emissions[i-1])*100}
a
for(i in 1:nrow(dfM)) { a[i] <- (dfM$Emissions[i]/dfM$Emissions[i-1])*100}
a <- c(0,0,0,0)
a
for(i in 1:nrow(dfM)) { a[i] <- (dfM$Emissions[i]/dfM$Emissions[i-1])*100}
for(i in 1:nrow(dfM)) { if (i == 1) a[i]=0 else a[i] <- (dfM$Emissions[i]/dfM$Emissions[i-1])*100}
a
2453.916/3274.18
for(i in 1:nrow(dfM)) { if (i == 1) 0 else  (dfM$Emissions[i]/dfM$Emissions[i-1])*100}
a
dfM <- cbind(dfM, a)
dfM
dfM <- cbind(dfM, PerDiff=a)
dfM
rm(dfM)
rm(dfMerged)
rm(dfMergedSubset,a,i)
rm(z, vSources, vSources2, vSources3)
rm(plot5)
source("plot5.r")
plot5(,dfNEI,dfSCC, TRUE)
a <- as.vector(1:nrow(dfSCC))
rm(a)
rm(plot5)
source("plot5.r")
plot(,dfNEI,dfSCC, TRUE)
plot5(,dfNEI,dfSCC, TRUE)
rm(checkAndDownload,multiplot,plot5)
source("plot5.r")
plot5(,dfNEI,dfSCC,TRUE)
rm(plot5)
rm(multiplot)
rm(checkAndDownload)
source("Plot5.r")
plot5(,dfNEI,dfSCC,TRUE)
rm(plot5,multiplot,checkAndDownload)
source("plot3.r")
source("plot3.r")
plot3(,dfNEI,dfSCC,TRUE)
rm(plot3)
source("plot2.r")
plot2(,dfNEI,dfSCC,TRUE)
rm(plot2)
source("plot2.r")
plot2(,dfNEI,dfSCC,TRUE)
dfBalt <- subset(dfNEI, fips == "24510", select = c(year, Emissions))
lBalt <- tapply(dfBalt$Emissions, dfBalt$year, sum)
dfBalt <- data.frame(Year=as.numeric(names(lBalt)), Emissions=as.numeric(lBalt))
iDiff <- round(max(dfBalt[,"Emissions"]) - min(dfBalt[,"Emissions"]))
sLabel <- paste("Emissions (PM 2.5) in Baltimore declined by", iDiff)
iDiff
iMin <- dfBalt$Emissions[dfBalt$Year==min(dfBalt$Year)]
iMax <- dfBalt$Emissions[dfBalt$Year==max(dfBalt$Year)]
iMin
iMax
dfBalt
dPercent <- round( ((iMax-iMin)/iMin) *-1*100, digits = 2)
dPercent
rm(dfBalt)
rm(dPercent)
rm(iDiff,iMax,iMin,lBalt,sLabel)
rm(plot2)
rm(checkAndDownload)
source("plot1.r")
plot1(,dfNEI,dfSCC,TRUE)
source("plot1.r")
plot1(,dfNEI,dfSCC,TRUE)
rm(plot1)
rm(checkAndDownload)
source("RunAll.r")
RunAll()
rm(list=ls())
