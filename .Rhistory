returns
stocks <- c("SPY", "HES", "CAT", "BAC")
returns <- getReturns("SPY", freq="week")
head(returns)
head(returns, 10)
head(returns, 1)
source('C:/Projects/RWork/efficientFrontier.R')
eff <- eff.frontier(returns=returns$R, short="yes", max.allocation=.45, risk.premium.up=.5, risk.increment=.001)
eff <- eff.frontier(returns=returns$R, short="yes", max.allocation=.8, risk.premium.up=.5, risk.increment=.001)
eff <- eff.frontier(returns=returns$R, short="yes", max.allocation=1, risk.premium.up=.5, risk.increment=.001)
eff.optimal.point <- eff[eff$sharpe==max(eff$sharpe),]
# Color Scheme
ealred  <- "#7D110C"
ealtan  <- "#CDC4B6"
eallighttan <- "#F7F6F0"
ealdark  <- "#423C30"
ggplot(eff, aes(x=Std.Dev, y=Exp.Return)) + geom_point(alpha=.1, color=ealdark) +
geom_point(data=eff.optimal.point, aes(x=Std.Dev, y=Exp.Return, label=sharpe), color=ealred, size=5) +
annotate(geom="text", x=eff.optimal.point$Std.Dev, y=eff.optimal.point$Exp.Return,
label=paste("Risk: ", round(eff.optimal.point$Std.Dev*100, digits=3),"\nReturn: ",
round(eff.optimal.point$Exp.Return*100, digits=4),"%\nSharpe: ",
round(eff.optimal.point$sharpe*100, digits=2), "%", sep=""), hjust=0, vjust=1.2) +
ggtitle("Efficient Frontier\nand Optimal Portfolio") + labs(x="Risk (standard deviation of portfolio variance)", y="Return") +
theme(panel.background=element_rect(fill=eallighttan), text=element_text(color=ealdark),
plot.title=element_text(size=24, color=ealred))
rm(list=ls())
stocks <- c("XOM",
"GS",
"BHP",
"DE",
"FE",
"GOOG",
"TLAB",
"WMT",
"KO",
"JNJ")
returns <- getReturns(stocks, period="week", start="2014-01-01", end ="2014-07-23")
returns <- getReturns(stocks, freq="week", start="2014-01-01", end ="2014-07-23")
returns <- getReturns(stocks, freq="week", start="2014-01-01", end ="2014-07-23")
returns <- getReturns(stocks, freq="week", start="2014-01-01", end ="2014-07-23")
returns <- getReturns(names(stocks), freq="week", start="2014-01-01", end ="2014-07-23")
names(stocks)
stocks
class(stocks)
returns <- getReturns(c("XOM",
"GS",
"BHP",
"DE",
"FE",
"GOOG",
"TLAB",
"WMT",
"KO",
"JNJ"), freq="week", start="2014-01-01", end ="2014-07-23")
stocks <- NULL
stocks <- c('XOM',
'GS',
'BHP',
'DE',
'FE',
'GOOG',
'TLAB',
'WMT',
'KO',
'JNJ')
stocks
returns <- getReturns(stocks, freq="week", start="2014-01-01", end ="2014-07-23")
returns <- getReturns(c('XOM',
'GS',
'BHP',
'DE',
'FE',
'GOOG',
'TLAB',
'WMT',
'KO',
'JNJ'), freq="week", start="2014-01-01", end ="2014-07-23")
library(stockPortfolio)
load(stock99)
data(stock99)
head(stock99)
returns <- getReturns('BAC', freq="week", start="2014-01-01", end ="2014-07-23")
returns <- getReturns('BAC', start='2014-01-01', end ='2014-07-23')
returns
returns <- getReturns('BAC', freq='week',start='2014-01-01', end ='2014-07-23')
returns <- getReturns('BAC', freq='week',start='2014-01-01', end ='2014-07-23')
head(returns)
head(stock99)
class(stock99)
colnames(stock99)
stocks <- colnames(stock99)
stock
stocks
class(stocks)
returns <- getReturns(stocks, freq='week',start='2014-01-01', end ='2014-07-23')
returns <- getReturns(stocks, freq='week',start='2014-01-01', end ='2014-07-23')
returns <- getReturns(stocks, freq='week',start='2014-01-01', end ='2014-07-23')
getwd()
source('C:/Projects/RWork/Assignment4/ProgrammingAssignment2/eval.r')
x <- c(1, 0, -1, 2)
x
x <- matrix(c(1, 0, -1, 2), 2,2)
x
det(x)
xc <- makeCacheMatrix(x)
xc
cacheSolve(xc)
cacheSolve(xc)
rm(xc)
x <- matrix(c(1:4), 2,2)
x
det(x)
x <- matrix(c(1:8), 4,2)
x
xc <- makeCacheMatrix(x)
cacheSolve(xc)
rm(xc)
x <- matrix(1:16, 4,4)
x
det(x)
xc <- makeCacheMatrix(x)
cacheSolve(xc)
ls.str()
t <- matrix (c(1:10), 2,5)
x <- vector(rnorm(10, 2, 20))
?vector
x <- vector(rnorm(10, 2, 20), mode="any")
rnorm(10,2,20)
x <- as.vector(rnorm(10,2,20), mode="any")
l <- list(c(-1:-100))
ls.str()
rm(list=ls())
?data.frame
apropos(help)
apropos("help")
x <- 0.1
e(x)
exp(x)
exp(-x)
c(0:1, .001)
c(0:1, step=.001)
?c
?seq
x <- seq( from = -1, to = 1, by=0.001)
x
y <- exp(x)
plot(y)
ploy(x,y)
plot(x,y)
plot(y,x)
summary(y)
z<- cbind(x,y)
z
z <- data.frame( seq(from=-10, to =10, by=0.001), exp(seq(from=-10, to =10, by=0.001)))
plot(z[,1], z[,2])
colnames(z) <- c(x,y)
colnames(z) <- c("x","y")
head(z)
summary(z)
gl(3,5)
?gl
gl(3,5)
x <- rnorm (100, 1, -1)
x
x <- rnorm (100, -1, 1)
x
x
z <- data.frame(x=rnorm(100,-1,1), y=exp(x))
z
plot(x,y)
colnames(z)
plot(z$x,z$y)
z <- data.frame(x=rnorm(1000,-1,1), y=exp(x))
plot(z$x,z$y)
z <- data.frame(x=rnorm(10000,-1,1), y=exp(x))
plot(z$x,z$y)
z <- data.frame(x=rnorm(10000,-10,10), y=exp(x))
plot(z$x,z$y)
z <- data.frame(x=rnorm(10000,-10,10), y=log(x))
log(20)
plot(z$x,z$y)
z <- log(c(1:100))
z <- ln(c(1:100))
?log
z
expand.grid(0:1,0:1,0:1)
expand.grid(0:1,1:5)
z <- matrix( rnorm(625, -1, 4), 25, 25)
head(z)
a <- chol(z)
a <- svd(z)
z
a
a
library(matrix)
library("matrix")
pi
e
exp
exp(1)
exp(i*pi)
i
1 + 2i
1i
exp((0+1i)*pi)
exp((0+1i)*pi) -1
exp((0+1i)*pi) +1
x <- rnorm(100, -1, 4)
x
?lapply
ispositive<-function(y) { if (y > 0) return(TRUE) else return(FALSE) }
ispositive(x[1])
ispositive(x[2])
lapply(x, ispositive)
t<-lapply(x, ispositive)
t
class(t)
dim(t)
?list
t<-sapply(x, ispositive)
t
split
?split
rm(t,x)
t <- Hilbert(100)
n <- 100
x <- 1:n
rm(x)
x<-1/sapply(1:n, function(x) x: (x+n-1))
x
head(X)
head(x)
dim(x)
class(x)
x[1,1]
x[1,2]
x[2,1]
x[2,2]
f <- function(x) x:(x+n-1)
f(1)
x[100,100]
1/100
1/99
1/x[100,100]
solve(x)
det(x)
rm(x)
n <- 10
x <- 1/sapply(1:n, function(x) x:(x+n-1))
x
dim(x)
det(x)
solve(x)
n <- 20
x <- 1/sapply(1:n, function(x) x:(x+n-1))
det(x)
solve(x)
rm(x)
rm(x)
rm(list=ls()
)
x <- 2000:2014
sample(x)
sample(x, 100, replace=TRUE)
salesmen <- c("Jin", "Jones", "Alfie", "Karin", "Nageswaran", "Lipmann")
?matrix
m <- matrix(sample(x, 100, replace=TRUE), 100,1)
dim(m)
m
m <- cbind(m, sample(salesmen, 100, replace=TRUE))
head(m,5)
m <- cbind(m, rnorm(100, 100, 6))
head(m,5)
colnames(m) <- c("Year", "Salesperson", "Sale")
head(m,5)
class(m)
m <- data.frame(m)
head(m, 5)
head(m)
x <- sample(1:100, replace=TRUE)
X
x
x <- c(rnorm(10), runif(10), rnorm(10,1))
x
f <- gl(3,10)
f
tapply(x,f,mean)
tapply(x,f,mean, simplify = FALSE)
tapply(x,f,mean, simplify = TRUE
)
split(x,f)
split(x,f, simplify=TRUE)
split(x,f)
lapply(split(x,f), mean)
library(datasets)
head(airquality)
s <- split(airquality, airquality$month)
head(airquality)
s <- split(airquality, airquality$month)
s <- split(airquality, airquality$Month)
lapply(s, function (x) colmeans(x[,c("Ozone", "Solar.R", "Wind")])
)
lapply(s, function (x) colmeans(x[,c("Ozone", "Solar.R", "Wind")]))
lapply(s, function (x) colMeans(x[,c("Ozone", "Solar.R", "Wind")]))
sapply(s, function (x) colMeans(x[,c("Ozone", "Solar.R", "Wind")]), na.rm=TRUE)
sapply(s, function (x) colMeans(x[,c("Ozone", "Solar.R", "Wind")], na.rm=TRUE))
f1 <- function (x) x
f1(s[1])
f1(12)
seq
?seq
x <- seq(from=-1, to=4, step=0.001)
x <- seq(from=-1, to=4, by=0.001)
x[1]
x[2]
y <- function f(x) return(x*x)
y <- function (x) return(x*x)
z <- f(x)
y
z <- y(x)
x <- seq(from = -5, to = 2, step = 0.001)
x <- seq(from = -5, to = 2, by = 0.001)
x
y <- function(x) sin(x)*cos(x)
z <- y(-1)
z
z <- y(x)
plot(x,z)
rm(list=ls())
fy <- c(2010,2011,2012,2010,2011,2012,2010,2011,2012)
company <- c("Apple","Apple","Apple","Google","Google","Google","Microsoft",
"Microsoft","Microsoft")
revenue <- c(65225,108249,156508,29321,37905,50175,62484,69943,73723)
profit <- c(14013,25922,41733,8505,9737,10737,18760,23150,16978)
companiesData <- data.frame(fy, company, revenue, profit)
companies
dim(companiesData )
head(companiesData)
str(companiesData)
companiesData$fy <- as.factor(companiesData$fy)
str(companiesData)
companiesData$margin <- (companiesData$profit / companiesData$revenue) * 100
str(companiesData)
companiesData$margin <- round(companiesData$margin, 1)
?transform
cData <- companiesData[,1]:[,4]
cData <- as.data.frame(companiesData[,1:4])
dim(cData)
dim(companiesData)
head(cData,2)
head(companiesData,2)
rm (list=ls())
?gl
gl(2, 8 labels = c("Alpha", "Bravo"))
gl(2, 8, labels = c("Alpha", "Bravo"))
gl(2, 8, labels = c("Alpha", "Bravo", "Charlier"))
gl(2, 8, labels = c("Alpha", "Bravo", "Charlie", "Delta"))
gl(4, 8, labels = c("Alpha", "Bravo", "Charlie", "Delta"))
rev <- rnorm(10, 350000, 8)
rev
rev <- rnorm(10, 350000, 10)
rev
rev <- rnorm(10, 10000, 10)
rev
?rnorm
rev <- rnorm(10, 10000, 10000)
rev
rev <- rnorm(10, 35000, 20000)
rev
?read.csv
data_url <- "http://faculty.washington.edu/ezivot/econ424/sbuxPrices.csv"
sbux_df <- read.csv(data_url, header=TRUE, stringsasFactors=FALSE)
sbux_df <- read.csv(data_url, header=TRUE, stringsAsFactors=FALSE)
sbux_df
head(sbux_df , 10)
library(stockPortfolio)
getReturns
getReturns("SBUX", frequency="day")
getReturns("SBUX", freq="day", from="01/01/1993", to="08/01/2014")
getReturns("SBUX", freq="day", start="01/01/1993", end="08/01/2014")
sbux_df <- getReturns("SBUX", freq="day", start="01/01/1993", end="08/01/2014")
summary(sbux_df)
head(sbux_df)
head(sbux_df, 10)
head(sbux_df, 1)
colnames(sbux_df)
search()
.packages()
(.packages())
library(data.table)
library(data.table)
ver
version()
ver()
about
?R
dt <- data.table(x=rnorm(1000), y = rep(LETTERS))
sessionInfo()
rm(list=ls())
library(stockPortfolio)
(.packages())
library(xlsx)
library(manipulate)
load(cars)
load.dataset(cars)
data(cars)
head(cars)
library(rcurl)
library(rCurl)
library(RCurl)
?getURL
txt = getURL("https://api.github.com/zen")
txt = getURL("https://api.github.com/zen")
txt = getURL("https://api.github.com/zen/")
curl --config
curl-config()
curl-config
curlOptions()
?curlOptions
txt = getURL("https://api.github.com/zen/")
txt = getURL("https://api.github.com/zen")
txt = getURL("https://api.github.com/zen")
txt = getURL("https://api.github.com/zen")
curlVersion$protocol()
library(RCurl)
curlVersion$protocol()
curlVersion()$protocol
library(RCurl)
curlVersion$protocol()
curlVersion()$protocol
txt = getURL("https://api.github.com/zen")
txt = getURL("https://api.github.com/zen", cainfo = "c:/Program Files/R/library/RCurl/CurlSSL/ca-bundle.crt")
txt = getURL("https://api.github.com/zen", cainfo = "C:/Program Files/R/R-3.1.1/library/RCurl/CurlSSL/ca-bundle.crt")
curlVersion()$protocol
txt = getURL("https://api.github.com/zen", cainfo = "C:/Program Files/R/R-3.1.1/library/RCurl/CurlSSL/ca-bundle.crt")
source('C:/Projects/RWork/GetData006/TryOAuth.r')
?oauth_app
source('C:/Projects/RWork/GetData006/TryOAuth.r')
library(httpuv)
install.packages(httpuv)
wget
library(httpuv)
source('C:/Projects/RWork/GetData006/TryOAuth.r')
source('C:/Projects/RWork/GetData006/TryOAuth.r')
?token
??token
?config
?oauth2.0_token
?oauth_endpoints
source('C:/Projects/RWork/GetData006/TryOAuth.r')
dim(req)
req
str(req)
summary(seq)
summary(req)
req
debugSource('C:/Projects/RWork/GetData006/Assignment/run_analysis.R')
consolidateDatasets("C:/Projects/RWork/GetData006/Assignment/UCI HAR Dataset/train/X_train.txt", "C:/Projects/RWork/GetData006/Assignment/UCI HAR Dataset/test/X_test.txt", "C:/Projects/RWork/GetData006/Assignment/UCI HAR Dataset/X_All.txt")
debugSource('C:/Projects/RWork/GetData006/Assignment/run_analysis.R')
debugSource('C:/Projects/RWork/GetData006/Assignment/run_analysis.R')
rm(list=ls())
source("C:\Projects\RWork\GetData006-new\Assignment\Evaluations\Student1\run_analysis.r")
source("C:/Projects/RWork/GetData006-new/Assignment/Evaluations/Student1/run_analysis.r")
source("C:/Projects/RWork/GetData006-new/Assignment/Evaluations/Student1/run_analysis.r")
source("C:/Projects/RWork/GetData006-new/Assignment/Evaluations/Student1/run_analysis.r")
getwd()
dir()
getwd()
setwd("C:/projects/rwork/getdata006/assignment")
rm(run_analysis, trim)
debugSource('C:/Projects/RWork/ExData006/Project1/plot1.r')
createReducedDataset()
source('C:/Projects/RWork/ExData006/Project1/plot1.r')
source('C:/Projects/RWork/ExData006/Project1/plot1.r')
rm(list=ls())
source('C:/Projects/RWork/ExData006/Project1/plot1.r')
createReducedDataset()
source('C:/Projects/RWork/ExData006/Project1/plot1.r')
source('C:/Projects/RWork/ExData006/Project1/plot1.r')
createReducedDataset()
source('C:/Projects/RWork/ExData006/Project1/plot1.r')
dfOut <- createReducedDataset()
head(dfOut ,10)
?ggplot
?plot
head(dfOut)
hist(dfOut$Global_active_power, breaks=12, color=red)
hist(dfOut$Global_active_power, breaks=12, color="red")
?hist
hist(dfOut$Global_active_power, breaks=12, col="red")
?dev.print
hist(dfOut$Global_active_power, breaks=12, col="red")
?plot
?hist
hist(dfOut$Global_active_power, breaks=12, col="red", main="Global Active Power", xlab="Global Active Power (kilowatts)")
dir.exists("C:/Projects/RWork/ExData006/Project1")
?dir
?file.exists
file.exists("C:/Projects/RWork/ExData006/Project1")
file.exists("C:/Projects/RWork/ExData006/Projec1")
scan(file="", what=character())
readLine()
readLines()
rm(list=ls())
setwd("C:\Projects\RWork\ExData006\Project2\ExData006-Project2")
setwd("C:/Projects/RWork/ExData006/Project2/ExData006-Project2")
dir()
source("Plot1.r")
plot1()
file.exists("C:/teee")
file.exists("C:/temp")
rm(list=ls())
